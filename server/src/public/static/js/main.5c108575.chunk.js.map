{"version":3,"sources":["components/ItemInput.tsx","components/ItemPreview.tsx","components/ItemList.tsx","services/grocery.service.ts","services/socket.service.js","pages/GroceryPage.tsx","App.tsx","index.tsx"],"names":["ItemInput","addItem","onDeleteList","useState","item","setItem","className","value","onChange","e","target","type","onClick","ItemPreview","idx","markItem","isMarked","itemName","ItemList","items","data","map","BASE_URL","axios","Axios","create","withCredentials","groceryService","getItems","deleteList","a","unshift","post","updatedItems","console","log","itemIdx","get","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","disconnect","user","createSocketService","window","GroceryPage","setItems","updateItems","useEffect","loadItems","roomId","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c108575.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\n\nimport { AiFillPlusSquare } from \"react-icons/ai\";\n\nexport const ItemInput = ({ addItem, onDeleteList }: { addItem: (item: string) => void, onDeleteList: () => void }) => {\n\n    const [item, setItem] = useState('')\n\n    return (\n        <div className=\"item-input\">\n            <div className=\"item-input-wrapper\">\n                <input value={item} onChange={(e) => setItem(e.target.value)} className=\"item-input\" type=\"text\" />\n                <div onClick={() => { addItem(item); setItem('') }} className=\"plus-icon\">\n                    <AiFillPlusSquare />\n                </div>\n            </div>\n            <button onClick={onDeleteList}>!!!!!לרוקן את הרשימת קניות</button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const ItemPreview = ({ item, idx, markItem }: { item: any, idx: number, markItem: (idx: number) => void }) => {\n    return (\n        <div className=\"item-preview\">\n            <h3 onClick={() => markItem(idx)} className={`${item.isMarked ? 'marked' : ''}`}>👈 {item.itemName}</h3>\n        </div>\n    )\n}\n","import React from 'react'\nimport { ItemPreview } from './ItemPreview'\n\n\nexport const ItemList = ({ items, markItem }: { items: any | undefined, markItem: (idx: number) => void }) => {\n\n    return (\n        <main className=\"item-list\">\n            {items && items.data.map((item: any, idx: number) => (\n                <ItemPreview key={`grocery-item-${idx}`} item={item} idx={idx} markItem={markItem} />\n            ))}\n        </main>\n    )\n}\n","import Axios from \"axios\";\n\nconst BASE_URL =\n  process.env.NODE_ENV === \"production\" ? \"\" : \"//localhost:3030\";\n\nconst axios = Axios.create({\n  withCredentials: true,\n});\n\nexport const groceryService = {\n  addItem,\n  getItems,\n  markItem,\n  deleteList,\n};\n\nasync function addItem(item: string) {\n  try {\n    const items = await getItems();\n    items.data.unshift({ itemName: item, isMarked: false });\n    const updatedItems = await axios.post(\n      `${BASE_URL}/api/groceryItems`,\n      items\n    );\n    return updatedItems.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function markItem(itemIdx: number) {\n  try {\n    const items = await getItems();\n    items.data[itemIdx].isMarked = !items.data[itemIdx].isMarked;\n    const updatedItems = await axios.post(\n      `${BASE_URL}/api/groceryItems`,\n      items\n    );\n    return updatedItems.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function deleteList() {\n  try {\n    const items = await getItems();\n    items.data = [];\n    const updatedItems = await axios.post(\n      `${BASE_URL}/api/groceryItems`,\n      items\n    );\n    return updatedItems.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function getItems(): Promise<any> {\n  try {\n    const items = await axios.get(`${BASE_URL}/api/groceryItems`);\n    return items.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import io from 'socket.io-client'\n\n\n\n\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\nexport const socketService = createSocketService()\n\nwindow.socketService = socketService\n\nsocketService.setup()\n\n\nfunction createSocketService() {\n  let socket = null;\n  const socketService = {\n    setup() {\n      socket = io(baseUrl)\n    },\n    on(eventName, cb) {\n      socket.on(eventName, cb)\n    },\n    off(eventName, cb = null) {\n      if (!socket) return;\n      if (!cb) socket.removeAllListeners(eventName)\n      else socket.off(eventName, cb)\n    },\n    emit(eventName, data) {\n      socket.emit(eventName, data)\n    },\n    terminate() {\n      socket = null\n    },\n    disconnect(user) {\n      socket.emit('end', user);\n    }\n  }\n  return socketService\n}\n","import React, { useState, useEffect } from 'react'\nimport { ItemInput } from '../components/ItemInput'\nimport { ItemList } from '../components/ItemList'\nimport { groceryService } from '../services/grocery.service'\nimport { socketService } from '../services/socket.service'\n\nexport const GroceryPage = () => {\n\n    const [items, setItems] = useState<any>()\n\n    async function addItem(item: string) {\n        if (!item) return\n        const items = await groceryService.addItem(item)\n        setItems(items)\n        socketService.emit('update-list', items)\n    }\n\n    async function loadItems() {\n        const items = await groceryService.getItems()\n        setItems(items)\n        socketService.emit('update-list', items)\n    }\n\n    async function markItem(itemIdx: number) {\n        const items = await groceryService.markItem(itemIdx)\n        setItems(items)\n        socketService.emit('update-list', items)\n    }\n    async function onDeleteList() {\n        const items = await groceryService.deleteList()\n        setItems(items)\n        socketService.emit('update-list', items)\n    }\n\n    function updateItems(items: any) {\n        setItems(items)\n    }\n\n    useEffect(() => {\n        loadItems()\n        socketService.emit('roomId', { roomId: 'home' })\n        socketService.emit('update-list', items)\n        socketService.on('update-list-return', updateItems)\n\n        return () => {\n            socketService.off('update-list')\n            socketService.off('roomId')\n            socketService.off('update-list-return')\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    return (\n        <>\n            <ItemList items={items} markItem={markItem} />\n            <ItemInput addItem={addItem} onDeleteList={onDeleteList} />\n        </>\n\n    )\n}\n","import React from 'react';\nimport { GroceryPage } from './pages/GroceryPage';\n\nexport const App = () => {\n  return (\n    <GroceryPage />\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.scss'\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}